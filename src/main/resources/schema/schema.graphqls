type Query {
  getUsers: [User]
  getUserByEmail(email: String!): User
}

type Mutation {
  createUser(name: String!, email: String!, password: String!): User
  verifyEmail(token: String!): Boolean
  login(email: String!, password: String!): AuthPayload
}

type AuthPayload {
  user: User
  token: String
}


type User {
  id: ID!
  name: String!
  email: String!
  password: String
  isEmailVerified: Boolean
  verificationToken: String
  verificationTokenExpiry: String
  sessionId: String
  credits: Int
  subscriptionActive: Boolean
  planType: String
  preferredModel: String
  profileImageUrl: String
  phone: String
  organization: String
  address: String
  timezone: String
  isActive: Boolean
  lastLogin: String
  createdAt: String
  updatedAt: String
}
